// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NikolNikolaeva/project_weather/services (interfaces: WeatherDataGetter)

// Package services is a generated GoMock package.
package repositories

import (
	reflect "reflect"

	swagger "github.com/NikolNikolaeva/project_weather/resources/swagger"
	gomock "github.com/golang/mock/gomock"
)

// MockWeatherDataGetter is a mock of WeatherDataGetter interface.
type MockWeatherDataGetter struct {
	ctrl     *gomock.Controller
	recorder *MockWeatherDataGetterMockRecorder
}

// MockWeatherDataGetterMockRecorder is the mock recorder for MockWeatherDataGetter.
type MockWeatherDataGetterMockRecorder struct {
	mock *MockWeatherDataGetter
}

// NewMockWeatherDataGetter creates a new mock instance.
func NewMockWeatherDataGetter(ctrl *gomock.Controller) *MockWeatherDataGetter {
	mock := &MockWeatherDataGetter{ctrl: ctrl}
	mock.recorder = &MockWeatherDataGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeatherDataGetter) EXPECT() *MockWeatherDataGetterMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockWeatherDataGetter) GetData(arg0 string) (*swagger.WeatherDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData", arg0)
	ret0, _ := ret[0].(*swagger.WeatherDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetData indicates an expected call of GetData.
func (mr *MockWeatherDataGetterMockRecorder) GetData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockWeatherDataGetter)(nil).GetData), arg0)
}
